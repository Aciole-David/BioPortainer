version: '3.2'

services:
  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  bioportainer-panel:
    image: bioportainer/bioportainer-panel
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
    volumes:
      - bioportainer_data:/data
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
        
  bioportainer-pipeline-runner:
    image: bioportainer/bioportainer-pipeline-runner
    stdin_open: true
    ports:
      - "5000:5000"
      - "8888:8888"
      - "7000:7000"
    volumes:
      - bioportainer_workdir:/root/workdir/data
      - bioportainer_nextflow:/root/workdir/.nextflow/assets/nextflow-io/
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]
        
  bioportainer-watchtower:
    image: v2tec/watchtower
    stdin_open: true
    command: --cleanup portainer-base bioportainer-watchtower bioportainer-pipeline-runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

networks:
  agent_network:
    driver: overlay
    attachable: true

volumes:
  bioportainer_data:
  bioportainer_workdir:
  bioportainer_nextflow:
